name: Generate URA RSS Feed

on:
  schedule:
    - cron: '10 1 * * *'        # JST 10:10 毎日
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Python deps
      run: python -m pip install --upgrade requests beautifulsoup4 lxml

    - name: Build RSS via Python
      run: |
        python <<'PY'
        import requests, datetime, email.utils, pathlib, html
        from bs4 import BeautifulSoup

        BASE_URL = "https://caram.ynu.ac.jp"
        TOP_URL  = f"{BASE_URL}/index.html"

        r = requests.get(TOP_URL, timeout=20)
        soup = BeautifulSoup(r.text, "lxml")

        # ▼ 新着情報ブロックのセレクタは必要に応じて調整してください
        # 例：id="news" または class="newsList" 等
        news_list = soup.select_one("#news, .newsList, section.news") or soup

        items = []
        for elem in news_list.find_all("li", limit=20):  # 直近20件まで
            # タイトル取得
            title = elem.get_text(strip=True)
            # リンク取得
            a = elem.find("a")
            link = BASE_URL + a["href"] if a and a.has_attr("href") and a["href"].startswith("/") else (a["href"] if a else TOP_URL)
            # 日付取得（例: <span class="date">2025/05/01</span> など）
            date_txt = ""
            date_span = elem.find(class_="date") or elem.find("time")
            if date_span:
                date_txt = date_span.get_text(strip=True)
            # 日付をパース
            dt = None
            for fmt in ("%Y/%m/%d", "%Y-%m-%d"):
                try:
                    dt = datetime.datetime.strptime(date_txt, fmt)
                    break
                except:
                    continue
            if not dt:
                dt = datetime.datetime.utcnow()
            pub = email.utils.format_datetime(dt)

            items.append(f"<item><title>{html.escape(title)}</title><link>{link}</link><pubDate>{pub}</pubDate></item>")

        rss = (
            '<?xml version="1.0" encoding="UTF-8"?>'
            '<rss version="2.0"><channel>'
            '<title>URA育成教育研究センター 新着情報</title>'
            f'<link>{TOP_URL}</link>'
            '<description>横浜国立大学URAセンターの最新情報</description>'
            + "".join(items) +
            '</channel></rss>'
        )
        pathlib.Path("new_rss.xml").write_text(rss, encoding="utf-8")
        PY

    - name: Check for changes & stage file
      run: |
        if [ -f rss.xml ] && cmp -s new_rss.xml rss.xml; then
          echo "No content change"; exit 0; fi
        mv new_rss.xml rss.xml
        git add rss.xml

    - name: Commit & push if changed
      run: |
        if git diff --cached --quiet; then
          echo "Nothing to commit"; exit 0; fi
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git commit -m "Update URA RSS feed"
        git push
